k8s services enables communication between various components within and outside of the application.

k8s services helps us connect application together with other application or users.

example:
we deployed our pod having a web application running on it.
how do we as an external user access the web page?

exesiting setup example:
k8s node has ip address 192.168.1.2
laptop is on the same network as well 192.168.1.10

internal pod network is in the range 10.244.0.0
pod has ip address 10.244.0.2

In most Kubernetes setups, you cannot access a Pod directly via its internal IP (e.g., 10.244.0.2) from outside the cluster,

option to see the web page:

ssh: into node
inside k8s node we can see:
curl http://10.244.0.2
hello world!!

if i want to be able to access the webserver from my own laptop without having to switch into the node and simply by accessing the ip of the k8s node.

so we need something in middle to help us map requests to node from our laptop through the node to the pod running the web container.

this is where k8s services comes into play.

k8s service is an object just like replicaset or deployments that we worked with.

one of use case is to listen to a port on the node and forward requests on that port to port running the web application.
this type of service is known is node port service bcoz service listen to port on the node and forward request to pods.
------------------------------------------------
types of services:
Node port:
where the service makes an internal port accessible on a port on the node.

cluster ip:
in this case , service creates a virtual ip inside the cluster to enable communication between different services , such as a set of front end servers to set of backend servers.

load balancer:

--------------------------------------------
